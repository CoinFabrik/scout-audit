"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[417],{8561:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"detectors/ink/set-contract-storage","title":"Set contract storage","description":"What it does","source":"@site/docs/detectors/ink/2-set-contract-storage.md","sourceDirName":"detectors/ink","slug":"/detectors/ink/set-contract-storage","permalink":"/docs/detectors/ink/set-contract-storage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/detectors/ink/2-set-contract-storage.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Integer overflow or underflow","permalink":"/docs/detectors/ink/integer-overflow-or-underflow"},"next":{"title":"Reentrancy","permalink":"/docs/detectors/ink/reentrancy"}}');var r=n(5105),o=n(6755);const a={},c="Set contract storage",i={},l=[{value:"What it does",id:"what-it-does",level:3},{value:"Why is this bad?",id:"why-is-this-bad",level:3},{value:"Known problems",id:"known-problems",level:3},{value:"Example",id:"example",level:3},{value:"Implementation",id:"implementation",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"set-contract-storage",children:"Set contract storage"})}),"\n",(0,r.jsx)(t.h3,{id:"what-it-does",children:"What it does"}),"\n",(0,r.jsxs)(t.p,{children:["Checks for calls to ",(0,r.jsx)(t.code,{children:"env::set_contract_storage"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"why-is-this-bad",children:"Why is this bad?"}),"\n",(0,r.jsx)(t.p,{children:"Functions using keys as variables without proper access control or input sanitization can allow users to perform changes in arbitrary memory locations."}),"\n",(0,r.jsx)(t.h3,{id:"known-problems",children:"Known problems"}),"\n",(0,r.jsx)(t.p,{children:"Only checks the function call, so false positives could result."}),"\n",(0,r.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:"fn set_contract_storage(\n    &mut self,\n    user_input_key: [u8; 68],\n    user_input_data: u128,\n) -> Result<()> {\n    env::set_contract_storage(&user_input_key, &user_input_data);\n    Ok(())\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"Use instead:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:"fn set_contract_storage(\n    &mut self,\n    user_input_key: [u8; 68],\n    user_input_data: u128,\n) -> Result<()> {\n    if self.env().caller() == self.owner {\n        env::set_contract_storage(&user_input_key, &user_input_data);\n        Ok(())\n    } else {\n        Err(Error::UserNotOwner)\n    }\n}\n"})}),"\n",(0,r.jsx)(t.h3,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsxs)(t.p,{children:["The detector's implementation can be found at ",(0,r.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout/tree/main/detectors/set-contract-storage",children:"this link"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},6755:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var s=n(8101);const r={},o=s.createContext(r);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);