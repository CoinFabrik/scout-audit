"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5425],{3774:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>d});var o=a(6672);const n={},s=o.createContext(n);function i(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(s.Provider,{value:t},e.children)}},7090:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"detectors/ink/avoid-autokey-upgradable","title":"Avoid AutoKey Upgradable","description":"What it does","source":"@site/docs/detectors/ink/29-avoid-autokey-upgradable.md","sourceDirName":"detectors/ink","slug":"/detectors/ink/avoid-autokey-upgradable","permalink":"/scout-audit/docs/detectors/ink/avoid-autokey-upgradable","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/detectors/ink/29-avoid-autokey-upgradable.md","tags":[],"version":"current","sidebarPosition":29,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Lazy values get and not set","permalink":"/scout-audit/docs/detectors/ink/lazy-values-not-set"},"next":{"title":"Non payable transferred value","permalink":"/scout-audit/docs/detectors/ink/non-payable-transferred-value"}}');var n=a(3420),s=a(3774);const i={},d="Avoid AutoKey Upgradable",r={},c=[{value:"What it does",id:"what-it-does",level:3},{value:"Why is this bad?",id:"why-is-this-bad",level:3},{value:"More info",id:"more-info",level:3},{value:"Implementation",id:"implementation",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"avoid-autokey-upgradable",children:"Avoid AutoKey Upgradable"})}),"\n",(0,n.jsx)(t.h3,{id:"what-it-does",children:"What it does"}),"\n",(0,n.jsxs)(t.p,{children:["Warns about the usage of ",(0,n.jsx)(t.code,{children:"Lazy"})," storage (",(0,n.jsx)(t.code,{children:"Mapping"}),", ",(0,n.jsx)(t.code,{children:"Lazy"})," and ",(0,n.jsx)(t.code,{children:"StorageVec"}),") without a ",(0,n.jsx)(t.code,{children:"ManualKey<...>"})," when the function ",(0,n.jsx)(t.code,{children:"set_code_hash"})," is used in the contract."]}),"\n",(0,n.jsx)(t.h3,{id:"why-is-this-bad",children:"Why is this bad?"}),"\n",(0,n.jsxs)(t.p,{children:["If the hash passed to ",(0,n.jsx)(t.code,{children:"set_code_hash"})," corresponds to a contract that the compiler assigned ",(0,n.jsx)(t.code,{children:"AutoKey<>"})," to the lazy values, the data in the old keys will be lost. This could lead not only to data loss, but to a locked contract too."]}),"\n",(0,n.jsx)(t.h3,{id:"more-info",children:"More info"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"https://use.ink/datastructures/storage-layout/#manual-vs-automatic-key-generation",children:"https://use.ink/datastructures/storage-layout/#manual-vs-automatic-key-generation"})}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"implementation",children:"Implementation"}),"\n",(0,n.jsxs)(t.p,{children:["The detector's implementation can be found at ",(0,n.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout/tree/main/detectors/avoid-autokey-upgradable",children:"this link"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);