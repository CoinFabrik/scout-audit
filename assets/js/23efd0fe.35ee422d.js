"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[76],{2097:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"detectors/rust/overflow-check","title":"Overflow-check","description":"Description","source":"@site/docs/detectors/rust/overflow-check.md","sourceDirName":"detectors/rust","slug":"/detectors/rust/overflow-check","permalink":"/scout-audit/docs/detectors/rust/overflow-check","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/detectors/rust/overflow-check.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Known vulnerabilities","permalink":"/scout-audit/docs/detectors/rust/known-vulnerabilities"},"next":{"title":"Unsafe expect","permalink":"/scout-audit/docs/detectors/rust/unsafe-expect"}}');var r=t(5105),i=t(6755);const o={},c="Overflow-check",l={},a=[{value:"Description",id:"description",level:2},{value:"Why is this bad?",id:"why-is-this-bad",level:3},{value:"Example",id:"example",level:3},{value:"Implementation",id:"implementation",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"overflow-check",children:"Overflow-check"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Category: ",(0,r.jsx)(n.code,{children:"Arithmetic"})]}),"\n",(0,r.jsxs)(n.li,{children:["Severity: ",(0,r.jsx)(n.code,{children:"Critical"})]}),"\n",(0,r.jsxs)(n.li,{children:["Detectors: ",(0,r.jsx)(n.a,{href:"https://github.com/CoinFabrik/scout-audit/blob/main/detectors/rust/overflow-check/src/lib.rs",children:(0,r.jsx)(n.code,{children:"overflow-check"})})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Checks that ",(0,r.jsx)(n.code,{children:"overflow-checks"})," is enabled in the ",(0,r.jsx)(n.code,{children:"[profile.release]"})," section of the ",(0,r.jsx)(n.code,{children:"Cargo.toml"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"why-is-this-bad",children:"Why is this bad?"}),"\n",(0,r.jsx)(n.p,{children:"Integer overflow will trigger a panic in debug builds or will wrap in\nrelease mode. Division by zero will cause a panic in either mode. In some applications one\nwants explicitly checked, wrapping or saturating arithmetic."}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[package]\nname = "overflow-check-vulnerable-1"\nversion = "0.1.0"\nedition = "2021"\n\n[lib]\ncrate-type = ["cdylib"]\n\n[dependencies]\nsoroban-sdk = "20.0.0-rc2"\n\n[dev-dependencies]\nsoroban-sdk = { version = "=20.0.0", features = ["testutils"] }\n\n[features]\ntestutils = ["soroban-sdk/testutils"]\n\n[profile.release]\nopt-level = "z"\noverflow-checks = false\ndebug = 0\nstrip = "symbols"\ndebug-assertions = false\npanic = "abort"\ncodegen-units = 1\nlto = true\n\n[profile.release-with-logs]\ninherits = "release"\ndebug-assertions = true\n'})}),"\n",(0,r.jsx)(n.p,{children:"Use instead:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-toml",children:'[package]\nname = "overflow-check-remediated-1"\nversion = "0.1.0"\nedition = "2021"\n\n[lib]\ncrate-type = ["cdylib"]\n\n[dependencies]\nsoroban-sdk = "20.0.0-rc2"\n\n[dev-dependencies]\nsoroban-sdk = { version = "=20.0.0", features = ["testutils"] }\n\n[features]\ntestutils = ["soroban-sdk/testutils"]\n\n[profile.release]\nopt-level = "z"\noverflow-checks = true\ndebug = 0\nstrip = "symbols"\ndebug-assertions = false\npanic = "abort"\ncodegen-units = 1\nlto = true\n\n[profile.release-with-logs]\noverflow-checks = true\ninherits = "release"\ndebug-assertions = true\n'})}),"\n",(0,r.jsx)(n.h3,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsxs)(n.p,{children:["The detector's implementation can be found at ",(0,r.jsx)(n.a,{href:"https://github.com/CoinFabrik/scout-soroban/tree/main/detectors/overflow-check",children:"this link"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},6755:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(8101);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);