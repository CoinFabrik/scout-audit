"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2917],{3717:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"detectors/ink/dos-unexpected-revert-with-vector","title":"DoS unexpected revert with vector","description":"What it does","source":"@site/docs/detectors/ink/7-dos-unexpected-revert-with-vector.md","sourceDirName":"detectors/ink","slug":"/detectors/ink/dos-unexpected-revert-with-vector","permalink":"/scout-audit/docs/detectors/ink/dos-unexpected-revert-with-vector","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/detectors/ink/7-dos-unexpected-revert-with-vector.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"DoS unbounded operation","permalink":"/scout-audit/docs/detectors/ink/dos-unbounded-operation"},"next":{"title":"Unsafe expect","permalink":"/scout-audit/docs/detectors/ink/unsafe-expect"}}');var r=n(5105),i=n(6755);const d={},o="DoS unexpected revert with vector",a={},c=[{value:"What it does",id:"what-it-does",level:3},{value:"Why is this bad?",id:"why-is-this-bad",level:3},{value:"Known problems",id:"known-problems",level:3},{value:"Example",id:"example",level:3},{value:"Implementation",id:"implementation",level:3}];function l(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"dos-unexpected-revert-with-vector",children:"DoS unexpected revert with vector"})}),"\n",(0,r.jsx)(t.h3,{id:"what-it-does",children:"What it does"}),"\n",(0,r.jsx)(t.p,{children:"Checks for array pushes without access control."}),"\n",(0,r.jsx)(t.h3,{id:"why-is-this-bad",children:"Why is this bad?"}),"\n",(0,r.jsx)(t.p,{children:"Arrays have a maximum size according to the storage cell. If the array is full, the push will revert. This can be used to prevent the execution of a function."}),"\n",(0,r.jsx)(t.h3,{id:"known-problems",children:"Known problems"}),"\n",(0,r.jsx)(t.p,{children:"If the owner validation is performed in an auxiliary function, the warning will be shown, resulting in a false positive."}),"\n",(0,r.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:"if self.votes.contains(candidate) {\n    Err(Errors::CandidateAlreadyAdded)\n} else {\n    self.candidates.push(candidate); // Where candidates: Vec<AccountId>\n    self.votes.insert(candidate, &0);\n    Ok(())\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"Use instead:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:"if self.votes.contains(candidate) {\n    Err(Errors::CandidateAlreadyAdded)\n} else {\n    self.candidates.insert(self.total_candidates, &candidate); // Where candidates: Mapping<u64, AccountId>\n    self.total_candidates += 1;\n    self.votes.insert(candidate, &0);\n    Ok(())\n}\n"})}),"\n",(0,r.jsx)(t.h3,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsxs)(t.p,{children:["The detector's implementation can be found at ",(0,r.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout/tree/main/detectors/dos-unexpected-revert-with-vector",children:"this link"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},6755:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>o});var s=n(8101);const r={},i=s.createContext(r);function d(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);