"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2590],{4751:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>i});const r=JSON.parse('{"id":"detectors/soroban/unprotected-update-current-contract-wasm","title":"Unprotected update current contract wasm","description":"Description","source":"@site/docs/detectors/soroban/6-unprotected-update-current-contract-wasm.md","sourceDirName":"detectors/soroban","slug":"/detectors/soroban/unprotected-update-current-contract-wasm","permalink":"/docs/detectors/soroban/unprotected-update-current-contract-wasm","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/detectors/soroban/6-unprotected-update-current-contract-wasm.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Insufficiently random values","permalink":"/docs/detectors/soroban/insufficiently-random-values"},"next":{"title":"Avoid core::mem::forget usage","permalink":"/docs/detectors/soroban/avoid-core-mem-forget"}}');var c=n(5105),a=n(6755);const s={},o="Unprotected update current contract wasm",d={},i=[{value:"Description",id:"description",level:2},{value:"Why is this bad?",id:"why-is-this-bad",level:2},{value:"Issue example",id:"issue-example",level:2},{value:"Remediated example",id:"remediated-example",level:2},{value:"How is it detected?",id:"how-is-it-detected",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsx)(t.h1,{id:"unprotected-update-current-contract-wasm",children:"Unprotected update current contract wasm"})}),"\n",(0,c.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,c.jsxs)(t.ul,{children:["\n",(0,c.jsxs)(t.li,{children:["Category: ",(0,c.jsx)(t.code,{children:"Authorization"})]}),"\n",(0,c.jsxs)(t.li,{children:["Severity: ",(0,c.jsx)(t.code,{children:"Critical"})]}),"\n",(0,c.jsxs)(t.li,{children:["Detector: ",(0,c.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout-soroban/tree/main/detectors/unprotected-update-current-contract-wasm",children:(0,c.jsx)(t.code,{children:"unprotected-update-current-contract-wasm"})})]}),"\n",(0,c.jsxs)(t.li,{children:["Test Cases: ",(0,c.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout-soroban/tree/main/test-cases/unprotected-update-current-contract-wasm/unprotected-update-current-contract-wasm-1",children:(0,c.jsx)(t.code,{children:"unprotected-update-current-contract-wasm-1"})})," ",(0,c.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout-soroban/tree/main/test-cases/unprotected-update-current-contract-wasm/unprotected-update-current-contract-wasm-2",children:(0,c.jsx)(t.code,{children:"unprotected-update-current-contract-wasm-2"})})]}),"\n"]}),"\n",(0,c.jsxs)(t.p,{children:["It warns you if ",(0,c.jsx)(t.code,{children:"update_current_contract_wasm()"})," function is called without a previous check of the address of the caller."]}),"\n",(0,c.jsx)(t.h2,{id:"why-is-this-bad",children:"Why is this bad?"}),"\n",(0,c.jsxs)(t.p,{children:["If users are allowed to call ",(0,c.jsx)(t.code,{children:"update_current_contract_wasm()"}),", they can intentionally modify the contract behaviour, leading to the loss of all associated data/tokens and functionalities given by this contract or by others that depend on it."]}),"\n",(0,c.jsx)(t.h2,{id:"issue-example",children:"Issue example"}),"\n",(0,c.jsxs)(t.p,{children:["Consider the following ",(0,c.jsx)(t.code,{children:"Soroban"})," contract:"]}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-rust",children:"\n #[contractimpl]\nimpl UpgradeableContract {\n    pub fn init(e: Env, admin: Address) {\n        e.storage().instance().set(&DataKey::Admin, &admin);\n    }\n\n    pub fn version() -> u32 {\n        1\n    }\n\n    pub fn upgrade(e: Env, new_wasm_hash: BytesN<32>) {\n        e.deployer().update_current_contract_wasm(new_wasm_hash);\n    }\n}\n\n"})}),"\n",(0,c.jsxs)(t.p,{children:["This contract allows upgrades through the ",(0,c.jsx)(t.code,{children:"update_current_contract_wasm"})," function. If just anyone can call this function, they could modify the contract behaviour."]}),"\n",(0,c.jsxs)(t.p,{children:["The code example can be found ",(0,c.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout-soroban/tree/main/test-cases/unprotected-update-current-contract-wasm/unprotected-update-current-contract-wasm-1/vulnerable-example",children:"here"}),"."]}),"\n",(0,c.jsx)(t.h2,{id:"remediated-example",children:"Remediated example"}),"\n",(0,c.jsx)(t.p,{children:"To prevent this, the function should be restricted to administrators or authorized users only."}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{className:"language-rust",children:"\n #[contractimpl]\nimpl UpgradeableContract {\n    pub fn init(e: Env, admin: Address) {\n        e.storage().instance().set(&DataKey::Admin, &admin);\n    }\n\n    pub fn version() -> u32 {\n        1\n    }\n\n    pub fn upgrade(e: Env, new_wasm_hash: BytesN<32>) {\n        let admin: Address = e.storage().instance().get(&DataKey::Admin).unwrap();\n        admin.require_auth();\n\n        e.deployer().update_current_contract_wasm(new_wasm_hash);\n    }\n}\n"})}),"\n",(0,c.jsxs)(t.p,{children:["The remediated code example can be found ",(0,c.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout-soroban/tree/main/test-cases/unprotected-update-current-contract-wasm/unprotected-update-current-contract-wasm-1/remediated-example",children:"here"}),"."]}),"\n",(0,c.jsx)(t.h2,{id:"how-is-it-detected",children:"How is it detected?"}),"\n",(0,c.jsxs)(t.p,{children:["It warns you if ",(0,c.jsx)(t.code,{children:"update_current_contract_wasm()"})," function is called without a previous check of the address of the caller."]})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(u,{...e})}):u(e)}},6755:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(8101);const c={},a=r.createContext(c);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);