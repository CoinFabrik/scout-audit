"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6301],{1313:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"detectors/ink/delegate-call","title":"Delegate call","description":"What it does","source":"@site/docs/detectors/ink/11-delegate-call.md","sourceDirName":"detectors/ink","slug":"/detectors/ink/delegate-call","permalink":"/scout-audit/docs/detectors/ink/delegate-call","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/detectors/ink/11-delegate-call.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Divide before multiply","permalink":"/scout-audit/docs/detectors/ink/divide-before-multiply"},"next":{"title":"Zero or test address","permalink":"/scout-audit/docs/detectors/ink/zero-or-test-address"}}');var s=n(5105),l=n(7890);const r={},c="Delegate call",o={},i=[{value:"What it does",id:"what-it-does",level:3},{value:"Why is this bad?",id:"why-is-this-bad",level:3},{value:"Example",id:"example",level:3},{value:"Implementation",id:"implementation",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"delegate-call",children:"Delegate call"})}),"\n",(0,s.jsx)(t.h3,{id:"what-it-does",children:"What it does"}),"\n",(0,s.jsx)(t.p,{children:"Checks for delegate calls to contracts passed as arguments."}),"\n",(0,s.jsx)(t.h3,{id:"why-is-this-bad",children:"Why is this bad?"}),"\n",(0,s.jsx)(t.p,{children:"Delegate calls to contracts passed as arguments can be used to change the expected behavior of the contract. If you need to change the target of a delegate call, you should use a storage variable, and make a function with proper access control to change it."}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"    #[ink(message)]\n    pub fn delegate_call(&mut self, target: Hash, argument: Balance) {\n        let selector_bytes = [0x0, 0x0, 0x0, 0x0];\n        let result: T  = build_call::<DefaultEnvironment>()\n            .delegate(target)\n            .exec_input(\n                ExecutionInput::new(Selector::new(selector_bytes))\n                    .push_arg(argument)\n            )\n            .returns::<T>()\n            .invoke();\n    }\n"})}),"\n",(0,s.jsx)(t.p,{children:"Use instead:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-rust",children:"    #[ink(message)]\n    pub fn delegate_call(&mut self, argument: Balance) {\n        let selector_bytes = [0x0, 0x0, 0x0, 0x0];\n        let result: T  = build_call::<DefaultEnvironment>()\n            .delegate(self.target)\n            .exec_input(\n                ExecutionInput::new(Selector::new(selector_bytes))\n                    .push_arg(argument)\n            )\n            .returns::<T>()\n            .invoke();\n    }\n\n    #[ink::message]\n    pub fn set_target(&mut self, new_target: Hash) -> Result<(), Error> {\n        if self.admin != self.env().caller() {\n            Err(Error::Unauthorized)\n        } else {\n            self.target = new_target;\n            Ok(())\n        }\n    }\n\n"})}),"\n",(0,s.jsx)(t.h3,{id:"implementation",children:"Implementation"}),"\n",(0,s.jsxs)(t.p,{children:["The detector's implementation can be found at ",(0,s.jsx)(t.a,{href:"https://github.com/CoinFabrik/scout/tree/main/detectors/delegate-call",children:"this link"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},7890:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var a=n(8101);const s={},l=a.createContext(s);function r(e){const t=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(l.Provider,{value:t},e.children)}}}]);