name: Test Release

on:
  pull_request:
    branches:
      - main
    paths:
      - "apps/cargo-scout-audit/**"
  workflow_dispatch:

env:
  PYTHONUNBUFFERED: 1
  REGISTRY: coinfabrik
  IMAGE_NAME: scout

jobs:
  test-release:
    name: Test dry-run release
    runs-on: ubuntu-latest
    outputs:
      scout-audit: ${{ steps.scout-audit.outputs.result }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests toml

      - name: Test Scout Audit
        id: scout-audit
        run: |
          python scripts/publish-to-crates-io.py --crate-path apps/cargo-scout-audit --dry-run
          echo "result=success" >> $GITHUB_OUTPUT

  test-docker-release:
    name: Release to Docker Hub
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        platform: [linux/amd64, linux/arm64]
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    outputs:
      docker-release: ${{ steps.test-docker-release.outputs.result }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get scout version
        id: scout-version
        run: |
          version=$(cat apps/cargo-scout-audit/Cargo.toml | grep '^version' | head -1 | awk -F '"' '{print $2}')
          echo "Version extracted: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Set platform-specific tag prefix
        id: set-tag-prefix
        run: |
          if [[ "${{ matrix.platform }}" == "linux/arm64" ]]; then
            echo "tag_prefix=-arm64" >> $GITHUB_OUTPUT
          else
            echo "tag_prefix=" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha
          push: false
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}${{ steps.set-tag-prefix.outputs.tag_prefix }}:${{ steps.scout-version.outputs.version }},
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}${{ steps.set-tag-prefix.outputs.tag_prefix }}:latest

      - name: Set Docker release status
        id: test-docker-release
        run: echo "result=success" >> $GITHUB_OUTPUT

  comment-on-pr:
    name: Comment on PR about release status
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [test-release, test-docker-release]
    steps:
      - name: Find existing comment
        id: find_comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body-includes: "🚀 Release Dry-Run Summary"

      - name: Create or Update PR Comment
        uses: peter-evans/create-or-update-comment@v4.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          comment-id: ${{ steps.find_comment.outputs.comment-id }}
          edit-mode: replace
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## 🚀 Release Dry-Run Summary
            | Crate | Dry Run Status |
            | --- | --- |
            | [cargo-scout-audit](https://crates.io/crates/cargo-scout-audit) | ${{ needs.test-release.outputs.scout-audit == 'success' && '✅ Successful' || '❌ Failed' }} |
            | [scout-docker](https://hub.docker.com/repository/docker/coinfabrik/scout/general) | ${{ needs.test-docker-release.outputs.docker-release == 'success' && '✅ Successful' || '❌ Failed' }} |
